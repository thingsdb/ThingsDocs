<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Connect on ThingsDB documentation</title><link>https://docs.thingsdb.io/v1/connect/</link><description>Recent content in Connect on ThingsDB documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.thingsdb.io/v1/connect/index.xml" rel="self" type="application/rss+xml"/><item><title>Authentication</title><link>https://docs.thingsdb.io/v1/connect/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/authentication/</guid><description>ThingsDB supports authentication by using a user and password combination, or with a token. A default user admin with password pass is created on a fresh installation. If you did not yet change the default password, you might want to jump to set password or jump to token authentication.
It might be a good idea to create a new user with minimal privileges and add a new token for this user.</description></item><item><title>HTTP API</title><link>https://docs.thingsdb.io/v1/connect/http-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/http-api/</guid><description>The ThingsDB HTTP API requires at least one node within your cluster to have the API port enabled, as it&amp;rsquo;s disabled by default. To activate it, edit the http_api_port setting in your ThingsDB configuration file or set the THINGSDB_HTTP_API_PORT environment variable. You can use a common port like 9210 for this purpose.
The API has support for both MessagePack and JSON and can be used to perform queries and run procedures.</description></item><item><title>Python</title><link>https://docs.thingsdb.io/v1/connect/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/python/</guid><description>Installation The python-thingsdb library requires Python 3.6 or higher.
Just use pip:
pip install python-thingsdb Or, clone the project and use setup.py:
python setup.py install Quick usage import asyncio from thingsdb.client import Client async def hello_world(): client = Client() # replace `localhost` with your ThingsDB server address await client.connect(&amp;#39;localhost&amp;#39;) # WebSocket connection are also supported: (replace port if required) # # await client.connect(&amp;#39;ws://localhost:9270&amp;#39;) # # for a secure connection, use wss:// and provide an SSL context, example: # (ssl can be set either to True or False, or an SSLContext) # # await client.</description></item><item><title>Go</title><link>https://docs.thingsdb.io/v1/connect/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/go/</guid><description>Installation Simple install the package to your $GOPATH with the go tool from shell:
$ go get github.com/thingsdb/go-thingsdb Make sure Git is installed on your machine and in your system&amp;rsquo;s PATH.
Quick usage Note: This example requires at lease version 1.0.0 of the go-thingsdb connector.
package main import ( &amp;#34;crypto/tls&amp;#34; &amp;#34;fmt&amp;#34; thingsdb &amp;#34;github.com/thingsdb/go-thingsdb&amp;#34; ) func example(conn *thingsdb.Conn, res chan interface{}) { if err := conn.Connect(); err != nil { res &amp;lt;- err return } // Close the connection at the end of this function defer conn.</description></item><item><title>C#</title><link>https://docs.thingsdb.io/v1/connect/csharp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/csharp/</guid><description>Installation The ThingsDB.Connector library requires .NET8.
This library is distributed via NuGet.
Using a package manager:
Install-Package ThingsDB.Connector Or, by using NET CLI:
dotnet add package ThingsDB.Connector Quick usage using System; using ThingsDB; namespace HelloWorld { class Program { static async Task Example() { // replace `localhost` with your ThingsDB server address and optionally // provide a port and enable TLS/SSL. (see documentation) Connector conn = new(&amp;#34;localhost&amp;#34;); // replace &amp;#39;admin&amp;#39; and &amp;#39;pass&amp;#39; with your username and password or a valid token await conn.</description></item><item><title>PHP</title><link>https://docs.thingsdb.io/v1/connect/php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/php/</guid><description>Requirements ThingsDB v1 PHP ^8.2 rybakit/msgpack mbstring openssl - Required only for connection with enabled SSL Installation Run the following command in your project to install the latest applicable version of the package:
composer require stefanak-michal/thingsdb-php Quick usage use ThingsDB\ThingsDB; $thingsDB = new ThingsDB(); $result = $thingsDB-&amp;gt;auth(); // returns true on success $message = $thingsDB-&amp;gt;query(&amp;#39;@:stuff&amp;#39;, &amp;#39;&amp;#34;Hello World!&amp;#34;;&amp;#39;); // returns &amp;#34;Hello World!&amp;#34; More info A more complete description of the PHP connector can be found in the link below.</description></item><item><title>JavaScript</title><link>https://docs.thingsdb.io/v1/connect/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/javascript/</guid><description>Requirements ThingsDB v1.6.0 Javascript Installation This library is available for both frontend and backend. You should choose installation method by your need.
browser Package is automatically available at unpkg. You can find latest version of package at https://unpkg.com/thingsdb.js@latest/dist/thingsdb.js
Add this into your html head:
&amp;lt;script src=&amp;quot;https://unpkg.com/thingsdb.js@latest/dist/thingsdb.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; npm Package is available at npm https://www.npmjs.com/package/thingsdb.js
Run this command to install package into your project:
npm i thingsdb.js Example const thingsdb = new ThingsDB(&amp;#39;ws://localhost:9270&amp;#39;); thingsdb.</description></item><item><title>WebSocket</title><link>https://docs.thingsdb.io/v1/connect/websocket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v1/connect/websocket/</guid><description>To use WebSockets, at least one node within your cluster must have the WebSocket port enabled, as it&amp;rsquo;s disabled by default. To activate it, edit the ws_port setting in your ThingsDB configuration file or set the THINGSDB_WS_PORT environment variable. You can use a common port like 9270 for this purpose.
When enabled, connections can be made using ws://&amp;lt;address&amp;gt;:&amp;lt;port&amp;gt;.
Enabling Secure WebSockets To safeguard data transfer with Secure WebSockets, certificates are essential.</description></item></channel></rss>