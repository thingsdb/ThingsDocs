<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Connect on ThingsDB documentation</title><link>https://docs.thingsdb.net/v1/connect/</link><description>Recent content in Connect on ThingsDB documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.thingsdb.net/v1/connect/index.xml" rel="self" type="application/rss+xml"/><item><title>Authentication</title><link>https://docs.thingsdb.net/v1/connect/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.net/v1/connect/authentication/</guid><description>ThingsDB supports authentication by using a user and password combination, or with a token. A default user admin with password pass is created on a fresh installation. If you did not yet change the default password, you might want to jump to set password or jump to token authentication.
It might be a good idea to create a new user with minimal privileges and add a new token for this user.</description></item><item><title>HTTP API</title><link>https://docs.thingsdb.net/v1/connect/http-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.net/v1/connect/http-api/</guid><description>Before using the HTTP API, make sure at least one node has the API port enabled. By default the API port is enabled and listening to TCP port 9210, but can be disabled or changed with the http_api_port in the configuration file or with the THINGSDB_HTTP_API_PORT environment variable.
The API has support for both MessagePack and JSON and can be used to perform queries and run procedures.
Use MessagePack if possible since this is the data serialization protocol which is used by ThingsDB internally and therefore is faster than JSON.</description></item><item><title>Python</title><link>https://docs.thingsdb.net/v1/connect/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.net/v1/connect/python/</guid><description>Installation The python-thingsdb library requires Python 3.6 or higher.
Just use pip:
pip install python-thingsdb Or, clone the project and use setup.py:
python setup.py install Quick usage import asyncio from thingsdb.client import Client async def hello_world(): client = Client() # replace `localhost` with your ThingsDB server address await client.connect(&amp;#39;localhost&amp;#39;) try: # replace `admin` and `pass` with your username and password # or use a valid token string await client.authenticate(&amp;#39;admin&amp;#39;, &amp;#39;pass&amp;#39;) # perform the hello world code.</description></item><item><title>Go</title><link>https://docs.thingsdb.net/v1/connect/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.net/v1/connect/go/</guid><description>Installation Simple install the package to your $GOPATH with the go tool from shell:
$ go get github.com/thingsdb/go-thingsdb Make sure Git is installed on your machine and in your system&amp;rsquo;s PATH.
Quick usage Note: This example requires at lease version 1.0.0 of the go-thingsdb connector.
package main import ( &amp;#34;crypto/tls&amp;#34; &amp;#34;fmt&amp;#34; thingsdb &amp;#34;github.com/thingsdb/go-thingsdb&amp;#34; ) func example(conn *thingsdb.Conn, res chan interface{}) { if err := conn.Connect(); err != nil { res &amp;lt;- err return } // Close the connection at the end of this function defer conn.</description></item><item><title>C#</title><link>https://docs.thingsdb.net/v1/connect/csharp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.net/v1/connect/csharp/</guid><description>Installation The ThingsDB.Connector library requires .NET8.
This library is distributed via NuGet.
Using a package manager:
Install-Package ThingsDB.Connector Or, by using NET CLI:
dotnet add package ThingsDB.Connector Quick usage using System; using ThingsDB; namespace HelloWorld { class Program { static async Task Example() { // replace `localhost` with your ThingsDB server address and optionally // provide a port and enable TLS/SSL. (see documentation) Connector conn = new(&amp;#34;localhost&amp;#34;); // replace &amp;#39;admin&amp;#39; and &amp;#39;pass&amp;#39; with your username and password or a valid token await conn.</description></item></channel></rss>