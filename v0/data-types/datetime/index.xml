<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>datetime on ThingsDB documentation</title><link>https://docs.thingsdb.io/v0/data-types/datetime/</link><description>Recent content in datetime on ThingsDB documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.thingsdb.io/v0/data-types/datetime/index.xml" rel="self" type="application/rss+xml"/><item><title>extract</title><link>https://docs.thingsdb.io/v0/data-types/datetime/extract/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/extract/</guid><description>Return a thing with second, minute, hour, day, month, year and gmt_offset as individual properties.
It is possible to get a single property by using the name of the property as the first argument.
This function does not generate an event.
Function datetime.extract([key])
Arguments Argument Type Description key str (optional) May be a specific property, one of second, minute, hour, day, month, year or gmt_offset.</description></item><item><title>format</title><link>https://docs.thingsdb.io/v0/data-types/datetime/format/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/format/</guid><description>Returns a string representation for a datetime object using a custom format.
This function does not generate an event.
Function datetime.format(fmt)
Arguments Argument Type Description fmt str (required) Custom output format. Format specifiers The following specifiers may be used:
Specifier Example Description %a Wed Abbreviated weekday name. * %A Wednesday Full weekday name.</description></item><item><title>move</title><link>https://docs.thingsdb.io/v0/data-types/datetime/move/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/move/</guid><description>Return a new datetime (or timeval) object, which is shifted in time relative to the original date/time. The amount the new date/time will be shifted must be given by one of the following units: years, months, weeks, days, hours, minutes or seconds.
When using years of months as a unit, it might not be possible to move to the exact same day in the month. If this is the case, the last possible day of the month will be used.</description></item><item><title>replace</title><link>https://docs.thingsdb.io/v0/data-types/datetime/replace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/replace/</guid><description>Return a new datetime (or timeval) object with altered properties. The new properties must be given by a thing.
This function does not generate an event.
Function datetime.replace(values)
Arguments Argument Type Description values thing (required) Only the properties year, month, day, hour, minute, second will be used, all other properties are simply ignored. Return value Returns a new datetime (or timeval) object.</description></item><item><title>to</title><link>https://docs.thingsdb.io/v0/data-types/datetime/to/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/to/</guid><description>Return a new datetime (or timeval) object with new time zone information. Note that the proper time does not change, only the time zone will change.
See time_zones_info() for a list of all available time zones.
If zone information is given using a fixed offset (+hh[mm] or -hh[mm]), then the new datetime object has no proper time zone information and thus has no day-light-saving information.
This function does not generate an event.</description></item><item><title>week</title><link>https://docs.thingsdb.io/v0/data-types/datetime/week/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/week/</guid><description>Return the week of the year as an integer between 0..53. Week 1 starts at the first Sunday in January.
This function does not generate an event.
Function datetime.week()
Arguments None
Return value Returns the week in the year as a number between 0 and 53.
Example This code uses week() as an example:
datetime(2020, 12, 10).week(); Return value in JSON format
49</description></item><item><title>weekday</title><link>https://docs.thingsdb.io/v0/data-types/datetime/weekday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/weekday/</guid><description>Return the number of days (0..6) since the last Sunday.
This function does not generate an event.
Function datetime.weekday()
Arguments None
Return value Returns the day of the week as a number between 0 (Sunday) and 6.
Example This code uses weekday() as an example:
datetime(2020, 12, 10).weekday(); Return value in JSON format
4</description></item><item><title>yday</title><link>https://docs.thingsdb.io/v0/data-types/datetime/yday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/yday/</guid><description>Return the day in the year as an integer value between 0..365 where the first of January is day 0.
This function does not generate an event.
Function datetime.yday()
Arguments None
Return value Returns the day in the year as a number between 0 and 365.
Example This code uses yday() as an example:
datetime(2020, 12, 10).yday(); Return value in JSON format
344</description></item><item><title>zone</title><link>https://docs.thingsdb.io/v0/data-types/datetime/zone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.thingsdb.io/v0/data-types/datetime/zone/</guid><description>Return zone information as a string about the datetime (or timeval) object. If no zone information is available, nil will be returned.
This function does not generate an event.
Function datetime.zone()
Arguments None
Return value Returns zone information or nil if no zone information is available.
Example This code uses zone() as an example:
[ datetime().zone(), datetime().to('Europe/Amsterdam').zone(), datetime().to('+00').zone(), ] Return value in JSON format
[ &amp;#34;UTC&amp;#34;, &amp;#34;Europe/Amsterdam&amp;#34;, null ]</description></item></channel></rss>