<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>room on ThingsDB documentation</title>
    <link>https://docs.thingsdb.net/v1/data-types/room/</link>
    <description>Recent content in room on ThingsDB documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://docs.thingsdb.net/v1/data-types/room/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>emit</title>
      <link>https://docs.thingsdb.net/v1/data-types/room/emit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v1/data-types/room/emit/</guid>
      <description>Emit a change to all clients which have joined this room. The event is a string value which you are free to choose. It is possible, but not required, to send extra arguments with the event.
This function does not generate a change.
Using events enables a user to write code like this example of a ChatRoom in the Python language:
import asyncio from thingsdb.util import event, Room from thingsdb.client import Client class ChatRoom(Room): @event(&amp;#39;new-message&amp;#39;) def on_new_message(self, msg): pass # do something with the message client = Client() loop = asyncio.</description>
    </item>
    
    <item>
      <title>id</title>
      <link>https://docs.thingsdb.net/v1/data-types/room/id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v1/data-types/room/id/</guid>
      <description>Returns the id of a room or nil if the room is not stored.
This function does not generate a change.
Function room.id()
Arguments None
Return value Returns id of a room or nil when the room is not stored.
Example  This code uses id() to return a collection id:
 .chat = room(); .chat.id(); // Returns the collection id  Example return value in JSON format
 624 </description>
    </item>
    
  </channel>
</rss>